rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /events/{eventId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId
                 || exists(/databases/$(database)/documents/invitations/$(request.query.token));
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    match /attendees/{attendeeId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId
                   || (request.auth != null && exists(/databases/$(database)/documents/invitations/$(request.resource.data.token)));
    }
    match /invitations/{inviteId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read: if true;
    }
    match /registrations/{registrationId} {
      allow create: if request.auth != null && exists(/databases/$(database)/documents/invitations/$(request.resource.data.token));
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}